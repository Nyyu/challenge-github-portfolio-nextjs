import axios from "axios"
import { GetServerSideProps } from "next"
import Head from "next/head"
import Image from "next/image"
import Link from "next/link"
import { useQuery } from "react-query"
import { v4 as uuid } from "uuid"
import { Box } from "../components/Box"
import { Avatar } from "../components/User/Avatar"
import { githubApi } from "../services/api"

interface HomeProps {
  users: any
}

export default function Home({ users }: HomeProps) {
  const { data, isLoading, error } = useQuery(
    "users",
    async () => await handleFetchUsers(),
    {
      initialData: users,
    }
  )

  return (
    <>
      <Head>
        <title>Home | Portfolio</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex flex-col gap-4">
        <Box>
          <h1 className="text-lg font-bold">User list</h1>
        </Box>
        <Box className="flex flex-col md:flex-row gap-3 flex-wrap justify-center items-center">
          {data?.map((user: any) => (
            <Link
              key={uuid()}
              className="btn btn-ghost justify-start btn-wide btn-lg flex flex-row items-center gap-3"
              href={`/users/${user.name}`}
            >
              <div className={`avatar`}>
                <div className="bg-neutral-focus text-neutral-content rounded-full ring ring-primary ring-offset-base-100 ring-offset-2">
                  <Image
                    src={user.img}
                    alt={`${user.name}-pfp`}
                    width={35}
                    height={35}
                  />
                </div>
              </div>
              {user.name}
            </Link>
          ))}
        </Box>
      </main>
    </>
  )
}

export const getServerSideProps: GetServerSideProps = async () => {
  const data = await handleFetchUsers()

  return {
    props: {
      users: data,
    },
  }
}

const handleFetchUsers = async () => {
  const response = await githubApi.get(`/users`)
  const { data } = response

  const formattedResponse = data.map((user: any) => ({
    name: user.login,
    email: user.email ?? "",
    img: user.avatar_url,
  }))

  return formattedResponse.slice(0, 24)
}
